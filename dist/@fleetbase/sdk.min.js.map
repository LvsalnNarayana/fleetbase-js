{"version":3,"file":"sdk.min.js","sources":["../../src/utils/array.js","../../src/utils/collection.js","../../src/utils/is-empty.js","../../src/utils/is-blank.js","../../src/utils/is-latitude.js","../../src/utils/is-longitude.js","../../src/utils/is-resource.js","../../src/utils/is-node-environment.js","../../src/utils/detect-adapter.js","../../src/utils/google-address.js","../../src/utils/point.js","../../src/utils/object.js","../../src/utils/store-actions.js","../../src/resource.js","../../src/resources/order.js","../../src/resources/payload.js","../../src/resources/entity.js","../../src/resources/place.js","../../src/resources/waypoint.js","../../src/resources/tracking-status.js","../../src/resources/vehicle.js","../../src/resources/driver.js","../../src/resources/vendor.js","../../src/resources/contact.js","../../src/resources/zone.js","../../src/resources/service-area.js","../../src/resources/service-rate.js","../../src/resources/service-quote.js","../../src/adapter.js","../../src/adapters/browser.js","../../src/adapters/node.js","../../src/adapters/ember.js","../../src/utils/string.js","../../src/resolver.js","../../src/store.js","../../src/fleetbase.js"],"sourcesContent":["const { isArray } = Array;\n\nexport {\n    isArray\n};\n","import { isArray } from './array';\n\n/**\n * Collection\n * Extended array inspired by Ember's NativeArray\n **/\n\nconst CHUNK_SIZE = 60000;\n\n// To avoid overflowing the stack, we splice up to CHUNK_SIZE items at a time.\n// See https://code.google.com/p/chromium/issues/detail?id=56588 for more details.\nconst replace = (array, start, deleteCount, items = []) => {\n    if (isArray(array)) {\n        if (items.length <= CHUNK_SIZE) {\n            array.splice(start, deleteCount, ...items);\n        } else {\n            array.splice(start, deleteCount);\n\n            for (let i = 0; i < items.length; i += CHUNK_SIZE) {\n                let chunk = items.slice(i, i + CHUNK_SIZE);\n                array.splice(start + i, 0, ...chunk);\n            }\n        }\n    } else if (isCollection(arr)) {\n        array.replace(start, deleteCount, items);\n    }\n};\n\nconst identityFunction = (item) => item;\n\nconst uniqBy = (array, key = identityFunction) => {\n    let ret = [];\n    let seen = new Set();\n    let getter = typeof key === 'function' ? key : (item) => get(item, key);\n\n    array.forEach((item) => {\n        let val = getter(item);\n        if (!seen.has(val)) {\n            seen.add(val);\n            ret.push(item);\n        }\n    });\n\n    return ret;\n};\n\nconst isCollection = (mixed) => mixed instanceof Collection;\n\nconst objectAt = (array, index) => {\n    if (isArray(array)) {\n        return array[index];\n    } else if (isCollection(array)) {\n        return array.objectAt(index);\n    }\n\n    return null;\n};\n\nconst iter = (key, value) => {\n    let valueProvided = arguments.length === 2;\n    return valueProvided ? (item) => value === item[key] : (item) => Boolean(item[key]);\n};\n\nconst findIndex = (array, predicate, startAt = 0) => {\n    let len = array.length;\n    for (let index = startAt; index < len; index++) {\n        let item = objectAt(array, index);\n        if (predicate(item, index, array)) {\n            return index;\n        }\n    }\n    return -1;\n};\n\nconst find = (array, callback, target) => {\n    let predicate = callback.bind(target);\n    let index = findIndex(array, predicate, 0);\n    return index === -1 ? undefined : objectAt(array, index);\n};\n\nconst any = (array, callback, target) => {\n    let predicate = callback.bind(target);\n    return findIndex(array, predicate, 0) !== -1;\n};\n\nconst every = (array, callback, target) => {\n    let cb = callback.bind(target);\n    let predicate = (item, index, array) => !cb(item, index, array);\n    return findIndex(array, predicate, 0) === -1;\n};\n\nconst indexOf = (array, val, startAt = 0, withNaNCheck) => {\n    let len = array.length;\n\n    if (startAt < 0) {\n        startAt += len;\n    }\n\n    // SameValueZero comparison (NaN !== NaN)\n    let predicate = withNaNCheck && val !== val ? (item) => item !== item : (item) => item === val;\n    return findIndex(array, predicate, startAt);\n};\n\nconst removeAt = (array, index, len = 1) => {\n    replace(array, index, len, []);\n    return array;\n};\n\nconst insertAt = (array, index, item) => {\n    replace(array, index, 0, [item]);\n    return item;\n};\n\nclass Collection extends Array {\n    constructor(...items) {\n        if (isArray(arguments[0])) {\n            super(...arguments[0]);\n        } else {\n            super(...arguments);\n        }\n    }\n\n    get notEmpty() {\n        return this.length > 0;\n    }\n\n    get empty() {\n        return this.length === 0;\n    }\n\n    get first() {\n        return objectAt(this, 0);\n    }\n\n    get last() {\n        return objectAt(this, this.length - 1);\n    }\n\n    replace(start, deleteCount, items = []) {\n        replace(this, start, deleteCount, items);\n\n        return this;\n    }\n\n    objectsAt(indexes) {\n        return indexes.map((idx) => objectAt(this, idx));\n    }\n\n    objectAt(index) {\n        return objectAt(this, index);\n    }\n\n    indexOf(object, startAt) {\n        return indexOf(this, object, startAt, false);\n    }\n\n    lastIndexOf(object, startAt) {\n        let len = this.length;\n\n        if (startAt === undefined || startAt >= len) {\n            startAt = len - 1;\n        }\n\n        if (startAt < 0) {\n            startAt += len;\n        }\n\n        for (let idx = startAt; idx >= 0; idx--) {\n            if (objectAt(this, idx) === object) {\n                return idx;\n            }\n        }\n\n        return -1;\n    }\n\n    includes(object, startAt) {\n        return indexOf(this, object, startAt, true) !== -1;\n    }\n\n    findBy() {\n        return find(this, iter(...arguments));\n    }\n\n    findIndexBy() {\n        return findIndex(this, iter(...arguments));\n    }\n\n    isEvery() {\n        return every(this, iter(...arguments));\n    }\n\n    isAny() {\n        return any(this, iter(...arguments));\n    }\n\n    invoke(methodName, ...args) {\n        let ret = [];\n\n        this.forEach((item) => ret.push(item[methodName]?.(...args)));\n\n        return ret;\n    }\n\n    toArray() {\n        return this.map((item) => item);\n    }\n\n    compact() {\n        return this.filter((value) => value != null);\n    }\n\n    sortBy() {\n        let sortKeys = arguments;\n\n        return this.sort((a, b) => {\n            for (let i = 0; i < sortKeys.length; i++) {\n                let key = sortKeys[i];\n                let propA = a[key];\n                let propB = b[key];\n                // return 1 or -1 else continue to the next sortKey\n                let compareValue = compare(propA, propB);\n\n                if (compareValue) {\n                    return compareValue;\n                }\n            }\n            return 0;\n        });\n    }\n\n    uniqBy(key) {\n        return uniqBy(this, key);\n    }\n\n    without(value) {\n        if (!this.includes(value)) {\n            return this; // nothing to do\n        }\n\n        // SameValueZero comparison (NaN !== NaN)\n        let predicate = value === value ? (item) => item !== value : (item) => item === item;\n        return this.filter(predicate);\n    }\n\n    clear() {\n        let len = this.length;\n        if (len === 0) {\n            return this;\n        }\n\n        this.replace(0, len, []);\n        return this;\n    }\n\n    insertAt(idx, object) {\n        insertAt(this, idx, object);\n        return this;\n    }\n\n    replaceAt(idx, object) {\n        return this.replace(idx, 1, [object]);\n    }\n\n    removeAt(start, len) {\n        return removeAt(this, start, len);\n    }\n\n    pushObject(obj) {\n        return this.insertAt(this.length, obj);\n    }\n\n    pushObjects(objects) {\n        this.replace(this.length, 0, objects);\n        return this;\n    }\n\n    popObject() {\n        let len = this.length;\n        if (len === 0) {\n            return null;\n        }\n\n        let ret = objectAt(this, len - 1);\n        this.removeAt(len - 1, 1);\n        return ret;\n    }\n\n    shiftObject() {\n        if (this.length === 0) {\n            return null;\n        }\n\n        let ret = objectAt(this, 0);\n        this.removeAt(0);\n        return ret;\n    }\n\n    unshiftObject(obj) {\n        return insertAt(this, 0, obj);\n    }\n\n    unshiftObjects(objects) {\n        this.replace(0, 0, objects);\n        return this;\n    }\n\n    reverseObjects() {\n        let len = this.length;\n        if (len === 0) {\n            return this;\n        }\n\n        let objects = this.toArray().reverse();\n        this.replace(0, len, objects);\n        return this;\n    }\n\n    setObjects(objects) {\n        if (objects.length === 0) {\n            return this.clear();\n        }\n\n        let len = this.length;\n        this.replace(0, len, objects);\n        return this;\n    }\n\n    removeObject(obj) {\n        let loc = this.length || 0;\n        while (--loc >= 0) {\n            let curObject = objectAt(this, loc);\n\n            if (curObject === obj) {\n                this.removeAt(loc);\n            }\n        }\n        return this;\n    }\n\n    removeObjects(objects) {\n        for (let i = objects.length - 1; i >= 0; i--) {\n            this.removeObject(objects[i]);\n        }\n\n        return this;\n    }\n\n    addObject(obj) {\n        let included = this.includes(obj);\n\n        if (!included) {\n            this.pushObject(obj);\n        }\n\n        return this;\n    }\n\n    addObjects(objects) {\n        objects.forEach((obj) => this.addObject(obj));\n        return this;\n    }\n}\n\nexport default Collection;\n\nexport { replace, uniqBy, isCollection, objectAt, iter, findIndex, find, any, every, indexOf, removeAt, insertAt };\n","const isEmpty = (obj) => {\n    const none = obj === null || obj === undefined;\n    if (none) {\n        return none;\n    }\n\n    if (typeof obj.size === 'number') {\n        return !obj.size;\n    }\n\n    const objectType = typeof obj;\n\n    if (objectType === 'object') {\n        const { size } = obj;\n        if (typeof size === 'number') {\n            return !size;\n        }\n    }\n\n    if (typeof obj.length === 'number' && objectType !== 'function') {\n        return !obj.length;\n    }\n\n    if (objectType === 'object') {\n        const { length } = obj;\n        if (typeof length === 'number') {\n            return !length;\n        }\n    }\n\n    return false;\n};\n\nexport default isEmpty;\n","import isEmpty from './is-empty';\n\nconst isBlank = (obj) => isEmpty(obj) || (typeof obj === 'string' && /\\S/.test(obj) === false);\n\nexport default isBlank;\n","export default function isLatitude(coordinate) {\n    return isFinite(coordinate) && Math.abs(coordinate) <= 90;\n}\n","export default function isLongitude(coordinate) {\n    return isFinite(coordinate) && Math.abs(coordinate) <= 180 && Math.abs(coordinate) >= 90;\n}\n","import Resource from '../resource';\n\nexport default function isResource(record) {\n    return record instanceof Resource;\n}\n","/**\n * Determines if environment SDK is initialized in is Node, additionally checks pass if environment is ReactNative.\n * \n * @returns boolean\n */\nconst isNodeEnvironment = () => {\n    return (typeof process !== 'undefined') && (typeof process?.env === 'object' || process.release?.name?.search(/node|io.js/) !== -1) && (typeof window === 'undefined' || window?.navigator?.product === 'ReactNative');\n};\n\nexport default isNodeEnvironment;","import { lookup } from '../resolver';\nimport isNodeEnvironment from './is-node-environment';\n\nconst detectAdapter = (options = {}) => {\n    if (isNodeEnvironment()) {\n        return lookup('adapter', 'NodeAdapter', options);\n    }\n\n    return lookup('adapter', 'BrowserAdapter', options);\n}\n\nexport default detectAdapter;","const { isArray } = Array;\n\nclass GoogleAddress {\n    constructor(place) {\n        this.place = place;\n        this.geometry = place?.geometry;\n        this.components = this.parseComponents();\n        this.attributes = this.parseProperties();\n    }\n\n    parse() {\n        this.parseComponents();\n        this.parseProperties();\n    }\n\n    parseComponents() {\n        const components = (this.place?.address_components || []).reduce(function (acc, data) {\n            data.types.forEach(function (type) {\n                acc[type] = data;\n            });\n            return acc;\n        }, {});\n\n        return components;\n    }\n\n    parseProperties() {\n        const attributes = {\n            streetNumber: this.get('street_number'),\n            streetName: this.get('route'),\n            coordinates: this.geometry?.location ? Object.values(this.geometry.location) : [0, 0],\n            city: this.or(['locality', 'sublocality', 'sublocality_level_1', 'neighborhood', 'administrative_area_level_3', 'administrative_area_level_2']),\n            county: this.get('administrative_area_level_2'),\n            stateShort: this.get('administrative_area_level_1', true),\n            stateLong: this.get('administrative_area_level_1'),\n            countryShort: this.get('country', true),\n            country: this.get('country', true),\n            countryLong: this.get('country'),\n            postalCode: this.get('postal_code'),\n        };\n\n        attributes.address = [attributes.streetNumber, attributes.streetName].filter(Boolean).join(' ');\n\n        return attributes;\n    }\n\n    all() {\n        return this.attributes;\n    }\n\n    or(keys = []) {\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n\n            if (isArray(key)) {\n                const pkey = key[0];\n                const short = key[1];\n\n                if (this.has(pkey)) {\n                    return this.get(pkey, short);\n                }\n\n                continue;\n            }\n\n            if (this.has(key)) {\n                return this.get(key);\n            }\n        }\n\n        return null;\n    }\n\n    has(key) {\n        return (key in this.components);\n    }\n\n    get(key, short = false) {\n        if (!(key in this.components)) {\n            return null;\n        }\n\n        return short ? this.components[key].short_name : this.components[key].long_name;\n    }\n\n    setAttributes(attributes = {}) {\n        this.attributes = {...this.attributes, ...attributes};\n\n        return this;\n    }\n\n    setAttribute(key, value) {\n        this.attributes[key] = value;\n\n        return this;\n    }\n\n    getAttribute(key) {\n        return this.attributes[key] || null;\n    }\n}\n\nexport default GoogleAddress;\n","export default class Point {\n    constructor(latitude = 0, longitude = 0) {\n        this.type = 'Point';\n        this.coordinates = [longitude, latitude];\n    }\n\n    get latitude() {\n        return this.coordinates[1];\n    }\n\n    get longitude() {\n        return this.coordinates[0];\n    }\n\n    lat() {\n        return this.latitude;\n    }\n\n    lng() {\n        return this.longitude;\n    }\n\n    static fromGeoJson(json) {\n        [ longitude, latitude ] = json.coordinates;\n\n        return new Point(latitude, longitude);\n    }\n\n    serialize() {\n        return {\n            type: 'Point',\n            coorindates: [this.lat(), this.lng()]\n        };\n    }\n\n    toJson() {\n        return this.serialize();\n    }\n\n    toString() {\n        return `(${this.latitude}, ${this.longitude})`;\n    }\n}","import isEmpty from './is-empty';\n\nconst isResource = (mixed) => typeof mixed === 'object' && !isEmpty(mixed?.attributes) && typeof mixed?.attributes === 'object';\n\nconst isCallable = (object, property) => typeof object[property] === 'function';\n\nconst getResolved = (func, path) => {\n    const resolved = func();\n    return Array.isArray(resolved) || typeof resolved === 'object' ? get(resolved, path) : null;\n};\n\nconst invoke = (object, method) => {\n    if (typeof object[method] === 'function') {\n        return object[method].bind(object);\n    }\n};\n\nconst get = (object, path) => {\n    let current = object;\n\n    const type = typeof object;\n    const isObject = type === 'object';\n    const isFunction = type === 'function';\n    const isArray = Array.isArray(object);\n\n    const pathType = typeof path;\n    const pathIsString = pathType === 'string';\n    const pathIsDotted = pathIsString && path.includes('.');\n    const pathArray = pathIsDotted ? path.split('.') : [path];\n\n    if (isArray || isObject) {\n        for (let i = 0; i < pathArray.length; i++) {\n            if (current && current[pathArray[i]] === undefined) {\n                return null;\n            } else if (current) {\n                current = current[pathArray[i]];\n\n                // if is resource then return get on it's attributes\n                if (isResource(current) && pathArray[i + 1] !== undefined) {\n                    const newPath = pathArray.slice(i + 1).join('.');\n\n                    return get(current.attributes, newPath);\n                }\n\n                // resolve functions and continue\n                if (typeof current === 'function') {\n                    const newPath = pathArray.slice(i + 1).join('.');\n                    return getResolved(current, newPath);\n                }\n            }\n        }\n        return current;\n    }\n\n    if (isFunction) {\n        return getResolved(object, path);\n    }\n};\n\nconst getProperties = (object, properties = []) => {\n    const selected = {};\n    let propertyNames = arguments;\n    let i = 1;\n\n    if (arguments.length === 2 && Array.isArray(properties)) {\n        i = 0;\n        propertyNames = arguments[1];\n    }\n\n    for (; i < propertyNames.length; i++) {\n        selected[propertyNames[i]] = get(object, propertyNames[i]);\n    }\n\n    return selected;\n};\n\nconst set = (object, path, value) => {\n    let current = object;\n    const type = typeof object;\n    const isObject = type === 'object';\n    const isFunction = type === 'function';\n    const isArray = Array.isArray(object);\n\n    // if is function\n    if (isFunction) {\n        // throw error should be object or array or object like\n    }\n\n    const pathType = typeof path;\n    const pathIsString = pathType === 'string';\n    const pathIsDotted = pathIsString && path.includes('.');\n    const pathArray = pathIsDotted ? path.split('.') : [path];\n    const iterations = pathArray.length;\n\n    if (isArray || isObject) {\n        for (let i = 0; i < iterations - 1; i++) {\n            if (!current[pathArray[i]]) {\n                current[pathArray[i]] = {};\n            }\n            current = current[pathArray[i]];\n        }\n\n        current[pathArray[iterations - 1]] = value;\n    }\n\n    return value;\n};\n\nconst setProperties = (object, properties = {}) => {\n    for (const property in properties) {\n        set(object, property, properties[property]);\n    }\n\n    return object;\n};\n\nconst extend = (target, classes = []) => {\n    if (arguments.length > 1) {\n        classes = arguments;\n    }\n    for (let index = 0; index < classes.length; index++) {\n        for (const property in classes[index]) {\n            if (Object.prototype.hasOwnProperty.call(classes[index], property)) {\n                target[property] = classes[index][property];\n            }\n        }\n    }\n    return target;\n};\n\nexport { set, get, getProperties, setProperties, extend, isCallable, invoke };\n","import { set } from './object';\n\nexport default class StoreActions {\n    constructor(actions = {}, bind = null) {\n        this.actions = actions;\n        this.bind = bind;\n    }\n\n    extend(bindTo = null) {\n        const binding = bindTo || this.bind;\n\n        if (!binding) {\n            return this;\n        }\n\n        if (this?.actions && typeof this.actions === 'object') {\n            for (let action in this.actions) {\n                const fn = this.actions[action];\n\n                if (typeof fn !== 'function') {\n                    set(binding, action, fn);\n                    continue;\n                }\n\n                set(binding, action, fn.bind(binding));\n            }\n        }\n\n        return this;\n    }\n}\n","import Store from './store';\nimport { isEmpty } from './utils';\nimport { isArray } from './utils/array';\nimport { set, get } from './utils/object';\n\nclass Resource {\n    /**\n\t * The base resource for all resources\n\n\t * @return {[type]} [description]\n\t */\n    constructor(attributes = {}, adapter, resource, options = {}) {\n        this.attributes = attributes;\n        this.dirtyAttributes = {};\n        this.changes = {};\n        this.isLoading = false;\n        this.isSaving = false;\n        this.isDestroying = false;\n        this.isReloading = false;\n        this.resource = resource;\n        this.options = options;\n        this.version = options.version || 'v1';\n        this.setAdapter(adapter);\n    }\n\n    /**\n     * Set a new adapter to the resource instance, this will update the Store instance\n     *\n     * @param {Adapter} adapter\n     * @return {Resource} this\n     */\n    setAdapter(adapter) {\n        this.adapter = adapter;\n        this.store = new Store(this.resource, adapter, {\n            onAfterFetch: this.syncAttributes.bind(this),\n            actions: this.options?.actions\n        });\n\n        return this;\n    }\n\n    /**\n     * Getter for id attribute\n     *\n     * @var {String}\n     */\n    get id() {\n        return this.getAttribute('id');\n    }\n\n    /**\n     * Creates a new resource on the server\n     *\n     * @param  {Object} payload [description]\n     * @return {[type]}         [description]\n     */\n    create(attributes = {}) {\n        const data = this.mergeAttributes(attributes);\n        this.setFlags(['isLoading', 'isSaving']);\n\n        return this.store.create(data).then((response) => {\n           this.setFlags(['isLoading', 'isSaving'], false);\n\n           return response;\n        });\n    }\n\n    /**\n     * Creates a new resource on the server\n     *\n     * @param  {Object} payload [description]\n     * @return {[type]}         [description]\n     */\n    update(attributes = {}) {\n        this.setFlags(['isLoading', 'isSaving']);\n\n        return this.store.update(this.attributes.id, attributes).then((response) => {\n           this.setFlags(['isLoading', 'isSaving'], false);\n\n           return response;\n        });\n    }\n\n    /**\n     * Deletes the resource instance on the server\n     *\n     * @return {[type]} [description]\n     */\n    destroy() {\n        this.setFlags(['isLoading', 'isDestroying']);\n\n        return this.store.destroy(this.attributes.id).then((response) => {\n           this.setFlags(['isLoading', 'isDestroying'], false);\n\n           return response;\n        });\n    }\n\n    /**\n     * Reloads the resource from the server.\n     *\n     * @return {[type]} [description]\n     */\n    reload() {\n        this.setFlags(['isLoading', 'isReloading']);\n\n        return this.store.findRecord(this.attributes.id).then((response) => {\n           this.reset();\n\n           return response;\n        });\n    }\n\n    /**\n     * Sets flag properties.\n     *\n     * @return this\n     */\n    setFlags(flags = [], state = true) {\n        const validFlags = ['isLoading', 'isSaving', 'isReloading', 'isDestroying'];\n\n        for(let i = 0; i < flags.length; i++) {\n            const flag = flags[i];\n\n            if (typeof flag !== 'string' || !validFlags.includes(flag)) {\n                throw new Error(`${flag} is not a valid flag!`);\n            }\n\n            this[flag] = state;\n        }\n\n        return this;\n    }\n\n    /**\n     * Resets tracked properties\n     *\n     * @return this\n     */\n    reset() {\n        this.dirtyAttributes = {};\n        this.changes = {};\n        this.isLoading = false;\n        this.isSaving = false;\n        this.isReloading = false;\n\n        return this;\n    }\n\n    /**\n     * Emptys resource.\n     *\n     * @return this\n     */\n    empty() {\n        this.reset();\n        this.attribues = {};\n\n        return this;\n    }\n\n    /**\n     * Saves the resource instance on the server\n     *\n     * @return {[type]} [description]\n     */\n    save(options = {}) {\n        const attributes = this.getAttributes();\n\n        if (isEmpty(this.id)) {\n            return this.create(attributes);\n        }\n\n        if (options.onlyDirty === true) {\n            return this.savedirty();\n        }\n\n        return this.update(attributes);\n    }\n\n    /**\n     * Saves only dirtied attributes.\n     *\n     * @return {[type]} [description]\n     */\n    saveDirty() {\n        const dirtyAttributeKeys = Object.keys(this.dirtyAttributes);\n        const dirtyAttributes = {};\n\n        for (let i = 0; i < dirtyAttributeKeys.length; i++) {\n            const key = dirtyAttributeKeys[i];\n            dirtyAttributes[key] = this.getAttribute(key);\n        }\n\n        return this.update(dirtyAttributes);\n    }\n\n    /**\n     * Returns the date instance resource was created.\n     *\n     * @return {Date}\n     */\n    get createdAt() {\n        return this.hasAttribute('created_at') ? new Date(this.getAttribute('created_at')) : null;\n    }\n\n    /**\n     * Returns the date instance resource was created.\n     *\n     * @return {Date}\n     */\n    get updatedAt() {\n        return this.hasAttribute('updated_at') ? new Date(this.getAttribute('updated_at')) : null;\n    }\n\n    /**\n     * Checks if resource is loaded from the server.\n     *\n     * @return {Boolean}\n     */\n    get isLoaded() {\n        return this.hasAttributes(['created_at', 'id']);\n    }\n\n    /**\n     * Checks if resource ihas no attributes\n     *\n     * @return {Boolean}\n     */\n    get isEmpty() {\n        return Object.values(this?.attributes).length === 0;\n    }\n\n    /**\n     * Checks if resource is not saved to server.\n     *\n     * @return {Boolean}\n     */\n    get isNew() {\n        return !this.id;\n    }\n\n    /**\n     * Checks if resource is not saved to server.\n     *\n     * @return {Boolean}\n     */\n    get isSaved() {\n        return !this.isNew && this.isLoaded;\n    }\n\n    /**\n     * Checks if resource is deleted on server.\n     *\n     * @return {Boolean}\n     */\n    get isDeleted() {\n        return this.hasAttributes(['deleted', 'time']);\n    }\n\n    /**\n     * Iterates over each attribute value and property executing a user supplied callback.\n     *\n     * @return {Object}\n     */\n    eachAttribute(callback) {\n        if (typeof callback !== 'function') {\n            return this;\n        }\n\n        Object.keys(this?.attributes ?? {}).forEach((property) => {\n            const value = this.getAttribute(property);\n            callback.call(this, value, property);\n        });\n\n        return this;\n    }\n\n    /**\n     * Gets all changes\n     *\n     * @return {Object}\n     */\n    changes() {\n        return this.changes;\n    }\n\n    /**\n     * Gets all dirty attributes.\n     *\n     * @return {Object}\n     */\n    getDirtyAttributes() {\n        return this.dirtyAttributes;\n    }\n\n    /**\n     * Checks if property is dirty.\n     *\n     * @param {String} property [description]\n     * @return {Boolean}\n     */\n    isDirty(property) {\n        return property in this.dirtyAttributes;\n    }\n\n    /**\n     * Checks if any properties is dirty.\n     *\n     * @return {Boolean}\n     */\n    hasDirtyAttributes() {\n        return Object.keys(this?.dirtyAttributes ?? {}).length > 0;\n    }\n\n    /**\n     * Updates a instance property without tracking changes or dirtying attribute.\n     *\n     * @param {String} property [description]\n     * @param {mixed} value   [description]\n     */\n    mutate(property, value) {\n        this.attributes[property] = value;\n    }\n\n    /**\n     * Set an instance property locally\n     *\n     * @param {String} property [description]\n     * @param {mixed} value   [description]\n     */\n    setAttribute(property, value = null) {\n        if (value === null && typeof property === 'object') {\n            return this.setAttributes(property);\n        }\n\n        const previousValue = this?.attributes[property] ?? null;\n\n        // use object setter\n        set(this.attributes, property, value);\n        set(this.dirtyAttributes, property, previousValue);\n        \n        // this.attributes[property] = value;\n        // this.dirtyAttributes[property] = previousValue;\n\n        // track changes\n        if (!isArray(this?.changes[property])) {\n            this.changes[property] = [];\n        }\n\n        this.changes[property].push({\n            property,\n            previousValue,\n            value,\n            changedAt: new Date(),\n        });\n\n        return this;\n    }\n\n    /**\n     * Set multiple instance properties locally\n     *\n     * @param {Object} properties [description]\n     */\n    setAttributes(attributes = {}) {\n        for (let property in attributes) {\n            this.setAttribute(property, attributes[property]);\n        }\n\n        return this;\n    }\n\n    /**\n     * Get an attribute\n     *\n     * @param {String} attribute     The attribute key to get\n     * @param {mixed}  defaultValue  The default value if no attribute value\n     */\n    getAttribute(attribute, defaultValue = null) {\n        const value = get(this?.attributes ?? {}, attribute);\n\n        if (value === undefined) {\n            return defaultValue;\n        }\n\n        return value;\n    }\n\n    /**\n     * Checks if attribute exists.\n     *\n     * @param {String} property [description]\n     * @return {Boolean}\n     */\n    hasAttribute(property) {\n        if (isArray(property)) {\n            const properties = property;\n            const attributeKeys = Object.keys(this.attributes ?? {});\n            \n            return properties.every((prop) => attributeKeys.includes(prop));\n        }\n\n        if (!this?.attributes) {\n            return false;\n        }\n\n        return property in this.attributes;\n    }\n\n    /**\n     * Alias for checking if has multiple attributes.\n     *\n     * @param {Array} properties \n     * @return {Boolean}\n     */\n    hasAttributes(properties = []) {\n        return this.hasAttribute(properties);\n    }\n\n    /**\n     * Returns true if attribute has value.\n     *\n     * @param {Array} properties \n     * @return {Boolean}\n     */\n    isAttributeFilled(property) {\n        if (isArray(property)) {\n            return this.hasAttribute(property) && property.every((prop) => !isEmpty(this.getAttribute(prop)));\n        }\n\n        return this.hasAttribute(property) && !isEmpty(this.getAttribute(property));\n    }\n\n    /**\n     * Get multiple attributes.\n     *\n     * @param {Array} properties [description]\n     * @param {[type]} value   [description]\n     */\n    getAttributes(properties) {\n        const attributes = {};\n\n        if (properties === null || properties === undefined) {\n            return this?.attributes;\n        }\n\n        if (typeof properties === 'string') {\n            return this.getAttribute([...arguments]);\n        }\n\n        if (!isArray(properties)) {\n            throw new Error('No attribute properties provided!');\n        }\n\n        for (let i = 0; i < properties.length; i++) {\n            const property = properties[i];\n\n            if (typeof property !== 'string') {\n                continue;\n            }\n\n            attributes[property] = this.getAttribute(property);\n        }\n\n        return attributes;\n    }\n\n    /**\n     * Serialize resource to a POJO\n     *\n     * @returns {Object}\n     */\n    serialize() {\n        return this.getAttributes();\n    }\n\n    /**\n     * Merge and return attributes on the resource instance.\n     *\n     * @param {[type]} property [description]\n     * @param {[type]} value   [description]\n     */\n    mergeAttributes(attributes = {}) {\n        const modelAttributes = this?.attributes ?? {};\n        this.attributes = { ...modelAttributes, ...attributes };\n\n        return this.attributes;\n    }\n\n    /**\n     * Merge and return attributes on the resource instance.\n     *\n     * @param {[type]} property [description]\n     * @param {[type]} value   [description]\n     */\n    syncAttributes(json = {}) {\n        this.attributes = json;\n    }\n}\n\nexport default Resource;\n","import Resource from '../resource';\nimport { StoreActions } from '../utils';\n\nconst orderActions = new StoreActions({\n    getDistanceAndTime: function (id, options = {}) {\n        return this.adapter.get(`${this.namespace}/${id}/distance-and-time`, {}, options);\n    },\n});\n\nclass Order extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'order', { actions: orderActions, ...options });\n    }\n\n    getDistanceAndTime() {\n        return this.store.getDistanceAndTime(this.id);\n    }\n}\n\nexport default Order;\n\nexport { orderActions };","import Resource from '../resource';\nimport Collection from '../utils/collection';\n\nclass Payload extends Resource {\n\tconstructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'payload', options);\n    }\n\t\n    /**\n\t * Attaches an entity to an existing payload and returns\n\t * the payload with the entity attached\n\t *\n\t * @param  {[type]} Entity entity        [description]\n\t * @return {[type]}        [description]\n\t */\n    attach(entity) {\n        // perform op return payload\n    }\n\n    /**\n\t * Returns all of the entities attached to this payload\n\t *\n\t * @return {[type]} [description]\n\t */\n    get entities() {\n\n    }\n\n    /**\n\t * Returns the dropoff for this payload\n\t *\n\t * @return {[type]} [description]\n\t */\n    get dropoff() {\n\n    }\n\n    /**\n\t * Returns the pickup for this payload\n\t *\n\t * @return {[type]} [description]\n\t */\n    get pickup() {\n\n    }\n\n    /**\n\t * Returns all the waypoints for this payload\n\t *\n\t * @return {[type]} [description]\n\t */\n    get waypoints() {\n        return new Collection(this.waypoints);\n    }\n}\n\nexport default Payload;\n","import Resource from '../resource';\n\nclass Entity extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'entity', options);\n    }\n}\n\nexport default Entity;\n","import Resource from '../resource';\nimport { isResource, Point } from '../utils';\n\nclass Place extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'place', options);\n    }\n\n    static fromGoogleAddress(googleAddress, adapter, options = {}) {\n        const [ latitude, longitude ] = googleAddress.getAttribute('coordinates');\n        const attributes = {\n            name: null,\n            address: googleAddress.getAttribute('address'),\n            location: new Point(latitude, longitude),\n            street1: googleAddress.getAttribute('streetName'),\n            street2: null,\n            city: googleAddress.getAttribute('city'),\n            province: googleAddress.getAttribute('stateLong'),\n            postal_code: googleAddress.getAttribute('postalCode'),\n            neighborhood: googleAddress.get('neighborhood'),\n            district: googleAddress.getAttribute('county'),\n            building: googleAddress.get('building'),\n            country: googleAddress.getAttribute('countryShort'),\n            phone: null,\n            security_access_code: null\n        };\n\n        return new Place(attributes, adapter, options);\n    }\n\n    /**\n     * The latitude coordinate for the 'Place' location.\n     * \n     * @var {Integer}\n     */\n    get latitude() {\n        return this.getAttribute('location', new Point())?.coordinates[1];\n    }\n\n    /**\n     * The longitude coordinate for the 'Place' location.\n     * \n     * @var {Integer}\n     */\n    get longitude() {\n        return this.getAttribute('location', new Point())?.coordinates[0];\n    }\n\n    /**\n     * Array coordinate pair for Place location.\n     * \n     * @var {Array}\n     */\n    get coordinates() {\n        const { latitude, longitude } = this;\n\n        return  [ latitude, longitude ];\n    }\n\n    /**\n     * Set the owner of the place.\n     * \n     * @param {Object|String} owner\n     * @return {Place}\n     */\n    setOwner(owner) {\n        if (isResource(owner)) {\n            this.setAttribute('owner', owner.id);\n        }\n\n        if (typeof owner === 'string') {\n            this.setAttribute('owner', owner);\n        }\n\n        return this;\n    }\n}\n\nexport default Place;\n","import Place from './place';\n\nclass Waypoint extends Place {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'waypoint', options);\n    }\n}\n\nexport default Waypoint;\n","import Resource from '../resource';\n\nclass TrackingStatus extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'tracking-status', options);\n    }\n}\n\nexport default TrackingStatus;\n","import Resource from '../resource';\n\nclass Vehicle extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'vehicle', options);\n    }\n}\n\nexport default Vehicle;\n","import Resource from '../resource';\n\nclass Driver extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'driver', options);\n    }\n}\n\nexport default Driver;\n","import Resource from '../resource';\n\nclass Vendor extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'vendor', options);\n    }\n}\n\nexport default Vendor;\n","import Resource from '../resource';\n\nclass Contact extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'contact', options);\n    }\n}\n\nexport default Contact;\n","import Resource from '../resource';\n\nclass Zone extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'zone', options);\n    }\n}\n\nexport default Zone;\n","import Resource from '../resource';\n\nclass ServiceArea extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'service-area', options);\n    }\n}\n\nexport default ServiceArea;\n","import Resource from '../resource';\n\nclass ServiceRate extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'service-rate', options);\n    }\n}\n\nexport default ServiceRate;\n","import Resource from '../resource';\n\nclass ServiceQuote extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'service-quote', options);\n    }\n\n    fromPreliminary() {\n\n    }\n\n    fromPayload() {\n        \n    }\n}\n\nexport default ServiceQuote;\n","class Adapter {\n    /**\n\t * Creates a configured base adapter for Fleetbase.\n\t *\n\t * @param  {Object} config Configuration options for adapter\n\t */\n    constructor(config = {}) {\n        this.version = config.version || 'v1';\n        this.host = config.host || null;\n        this.namespace = config.namespace || null;\n        this.headers = config.headers || {};\n    }\n}\n\nexport default Adapter;\n","import Adapter from '../adapter';\nimport { isBlank } from '../utils';\n\nclass BrowserAdapter extends Adapter {\n    /**\n     * Setup browser adapter.\n     * @param {Object} config\n     */\n    constructor(config) {\n        super(config);\n\n        this.setHeaders({\n            Authorization: `Bearer ${config.publicKey}`,\n            'Content-Type': 'application/json',\n            'User-Agent': '@fleetbase/sdk;browser'\n        });\n    }\n\n    /**\n     * Updates the adapter headers.\n     *\n     * @param {Object} headers\n     */\n    setHeaders(headers = {}) {\n        this.headers = { ...this.headers, ...headers };\n\n        return this;\n    }\n\n    /**\n     * Parses the JSON returned by a network request\n     *\n     * @param  {Object} response A response from a network request\n     * @return {Object}          The parsed JSON, status from the response\n     *\n     * @return {Promise}\n     */\n    parseJSON(response) {\n        return new Promise((resolve, reject) => response\n            .json()\n            .then((json) => resolve({\n                statusText: response.statusText,\n                status: response.status,\n                ok: response.ok,\n                json,\n            }))\n            .catch(() => {\n                reject(new Error('Oops! Something went wrong when handling your request.'));\n            }));\n    }\n\n    /**\n     * The base request method\n     *\n     * @param {String} path\n     * @param {String} method\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    request(path, method = 'GET', data = {}, options = {}) {\n        return new Promise((resolve, reject) => fetch(options.url || `${this.host}/${this.namespace}/${path}`, {\n            method,\n            mode: options.mode || 'cors',\n            headers: new Headers({\n                ...(this.headers || {}),\n                ...(options.headers || {}),\n            }),\n            ...data,\n        })\n            .then(this.parseJSON)\n            .then((response) => {\n                if (response.ok) {\n                    return resolve(response.json);\n                }\n\n                return reject(new Error(response.json.errors ? response.json.errors[0] : response.statusText));\n            })\n            .catch((error) => {\n                reject(error);\n            }));\n    }\n\n    /**\n     * Makes a GET request with fetch\n     *\n     * @param {String} path\n     * @param {Object} query\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    get(path, query = {}, options = {}) {\n        const urlParams = !isBlank(query) ? new URLSearchParams(query).toString() : '';\n\n        return this.request(`${path}${urlParams ? `?${urlParams}` : ''}`, 'GET', {}, options);\n    }\n\n    /**\n     * Makes a POST request with fetch\n     *\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    post(path, data = {}, options = {}) {\n        return this.request(path, 'POST', { body: JSON.stringify(data) }, options);\n    }\n\n    /**\n     * Makes a PUT request with fetch\n     *\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    put(path, data = {}, options = {}) {\n        return this.request(path, 'PUT', { body: JSON.stringify(data) }, options);\n    }\n\n    /**\n     * Makes a DELETE request with fetch\n     *\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    delete(path, options = {}) {\n        return this.request(path, 'DELETE', {}, options);\n    }\n\n    /**\n     * Makes a PATCH request with fetch\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    patch(path, data = {}, options = {}) {\n        return this.request(path, 'PATCH', { body: JSON.stringify(data) }, options);\n    }\n}\n\nexport default BrowserAdapter;\n","import Adapter from '../adapter';\nimport { isBlank } from '../utils';\nimport { isArray } from '../utils/array';\nimport axios from 'axios';\n\nclass NodeAdapter extends Adapter {\n    constructor(config) {\n        super(config);\n\n        this.axios = axios.create({\n            baseURL: `${this.host}/${this.namespace}`,\n            headers: {\n                Authorization: `Bearer ${config.publicKey}`,\n                'Content-Type': 'application/json',\n                'User-Agent': '@fleetbase/sdk;node',\n            },\n        });\n    }\n\n    /**\n     * Updates the adapter headers.\n     *\n     * @param {Object} headers\n     */\n    setHeaders(headers = {}) {\n        const commonHeaders = this.axios.defaults.headers.common;\n        this.axios.defaults.headers.common = { ...commonHeaders, ...headers };\n\n        return this;\n    }\n\n    /**\n     * Tranform the response, and return the response data from axios.\n     *\n     * @param {AxiosResponse} response\n     * @returns {Object}\n     */\n    transform(response) {\n        return response.data;\n    }\n\n    /**\n     * Handles an erroneous request.\n     *\n     * @param {AxiosResponse} response\n     * @returns {Object}\n     */\n    handleError(error) {\n        if (error.response) {\n            const { data } = error.response;\n\n            if (isArray(data.errors)) {\n                throw new Error(data.errors[0]);\n            }\n\n            if (data.error) {\n                throw new Error(data.error);\n            }\n        }\n\n        throw error;\n    }\n\n    /**\n     * Makes a GET request with axios\n     *\n     * @param {String} path\n     * @param {Object} query\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    get(path, query = {}, options = {}) {\n        const urlParams = !isBlank(query) ? new URLSearchParams(query).toString() : '';\n\n        return this.axios\n            .get(`${path}${urlParams ? `?${urlParams}` : ''}`, options)\n            .then(this.transform.bind(this))\n            .catch(this.handleError.bind(this));\n    }\n\n    /**\n     * Makes a POST request with axios\n     *\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    post(path, data = {}, options = {}) {\n        return this.axios.post(path, data, options).then(this.transform.bind(this)).catch(this.handleError.bind(this));\n    }\n\n    /**\n     * Makes a PUT request with axios\n     *\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    put(path, data = {}, options = {}) {\n        return this.axios.put(path, data, options).then(this.transform.bind(this)).catch(this.handleError.bind(this));\n    }\n\n    /**\n     * Makes a DELETE request with axios\n     *\n     * @param {String} path\n     * @param {Object} query\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    delete(path, options = {}) {\n        return this.axios.delete(path, options).then(this.transform.bind(this)).catch(this.handleError.bind(this));\n    }\n\n    /**\n     * Makes a PATCH request with axios\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    patch(path, data = {}, options = {}) {\n        return this.axios.patch(path, data, options).then(this.transform.bind(this)).catch(this.handleError.bind(this));\n    }\n}\n\nexport default NodeAdapter;\n","import Adapter from '../adapter';\n\nclass EmberJsAdapter extends Adapter {}\n\nexport default EmberJsAdapter;\n","'use strict';\n\n/**\n * Javascript String\n *\n * instance\n * new String('hello_world').humanize().get() => \"Hello world\"\n *\n * instance\n * const string = new String();\n * string.humanize('hello_world').get() => \"Hello world\"\n * \n * no chain\n * new String('hello_world', false).humanize() => \"Hello world\"\n *\n * static\n * String.invoke('humanize', 'hello_world') => \"Hello world\"\n *\n * exports {}\n * humanize('hello_world') => \"Hello world\"\n */\n\nexport default class String {\n    constructor(string, chain = true) {\n        this.str = string;\n        this.chain = chain;\n    }\n\n    uncountableWords = ['equipment', 'information', 'rice', 'money', 'species', 'series', 'fish', 'sheep', 'moose', 'deer', 'news'];\n\n    pluralRules = [\n        [new RegExp('(m)an$', 'gi'), '$1en'],\n        [new RegExp('(pe)rson$', 'gi'), '$1ople'],\n        [new RegExp('(child)$', 'gi'), '$1ren'],\n        [new RegExp('^(ox)$', 'gi'), '$1en'],\n        [new RegExp('(ax|test)is$', 'gi'), '$1es'],\n        [new RegExp('(octop|vir)us$', 'gi'), '$1i'],\n        [new RegExp('(alias|status)$', 'gi'), '$1es'],\n        [new RegExp('(bu)s$', 'gi'), '$1ses'],\n        [new RegExp('(buffal|tomat|potat)o$', 'gi'), '$1oes'],\n        [new RegExp('([ti])um$', 'gi'), '$1a'],\n        [new RegExp('sis$', 'gi'), 'ses'],\n        [new RegExp('(?:([^f])fe|([lr])f)$', 'gi'), '$1$2ves'],\n        [new RegExp('(hive)$', 'gi'), '$1s'],\n        [new RegExp('([^aeiouy]|qu)y$', 'gi'), '$1ies'],\n        [new RegExp('(x|ch|ss|sh)$', 'gi'), '$1es'],\n        [new RegExp('(matr|vert|ind)ix|ex$', 'gi'), '$1ices'],\n        [new RegExp('([m|l])ouse$', 'gi'), '$1ice'],\n        [new RegExp('(quiz)$', 'gi'), '$1zes'],\n        [new RegExp('s$', 'gi'), 's'],\n        [new RegExp('$', 'gi'), 's'],\n    ];\n\n    singularRules = [\n        [new RegExp('(m)en$', 'gi'), '$1an'],\n        [new RegExp('(pe)ople$', 'gi'), '$1rson'],\n        [new RegExp('(child)ren$', 'gi'), '$1'],\n        [new RegExp('([ti])a$', 'gi'), '$1um'],\n        [new RegExp('((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$', 'gi'), '$1$2sis'],\n        [new RegExp('(hive)s$', 'gi'), '$1'],\n        [new RegExp('(tive)s$', 'gi'), '$1'],\n        [new RegExp('(curve)s$', 'gi'), '$1'],\n        [new RegExp('([lr])ves$', 'gi'), '$1f'],\n        [new RegExp('([^fo])ves$', 'gi'), '$1fe'],\n        [new RegExp('([^aeiouy]|qu)ies$', 'gi'), '$1y'],\n        [new RegExp('(s)eries$', 'gi'), '$1eries'],\n        [new RegExp('(m)ovies$', 'gi'), '$1ovie'],\n        [new RegExp('(x|ch|ss|sh)es$', 'gi'), '$1'],\n        [new RegExp('([m|l])ice$', 'gi'), '$1ouse'],\n        [new RegExp('(bus)es$', 'gi'), '$1'],\n        [new RegExp('(o)es$', 'gi'), '$1'],\n        [new RegExp('(shoe)s$', 'gi'), '$1'],\n        [new RegExp('(cris|ax|test)es$', 'gi'), '$1is'],\n        [new RegExp('(octop|vir)i$', 'gi'), '$1us'],\n        [new RegExp('(alias|status)es$', 'gi'), '$1'],\n        [new RegExp('^(ox)en', 'gi'), '$1'],\n        [new RegExp('(vert|ind)ices$', 'gi'), '$1ex'],\n        [new RegExp('(matr)ices$', 'gi'), '$1ix'],\n        [new RegExp('(quiz)zes$', 'gi'), '$1'],\n        [new RegExp('s$', 'gi'), ''],\n    ];\n\n    nonTitlecasedWords = ['and', 'or', 'nor', 'a', 'an', 'the', 'so', 'but', 'to', 'of', 'at', 'by', 'from', 'into', 'on', 'onto', 'off', 'out', 'in', 'over', 'with', 'for'];\n\n    idSuffix = new RegExp('(_ids|_id)$', 'g');\n    underbar = new RegExp('_', 'g');\n    spaceOrUnderbar = new RegExp('[ _]', 'g');\n    uppercase = new RegExp('([A-Z])', 'g');\n    underbarPrefix = new RegExp('^_');\n\n    get() {\n        return this.str;\n    }\n\n    applyRules(str, rules, skip, override) {\n        if (override) {\n            str = override;\n        } else {\n            var ignore = skip.indexOf(str.toLowerCase()) > -1;\n            if (!ignore) {\n                for (var x = 0; x < rules.length; x++) {\n                    if (str.match(rules[x][0])) {\n                        str = str.replace(rules[x][0], rules[x][1]);\n                        break;\n                    }\n                }\n            }\n        }\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.pluralize('person')           -> 'people'\n        String.pluralize('octopus')          -> 'octopi'\n        String.pluralize('Hat')              -> 'Hats'\n        String.pluralize('person', 'guys')   -> 'guys'    \n    */\n    pluralize(str, plural = null) {\n        str = str || this.str;\n\n        return this.applyRules(str, this.pluralRules, this.uncountableWords, plural);\n    }\n\n    /*\n        String.singularize('person')         -> 'person'\n        String.singularize('octopi')         -> 'octopus'\n        String.singularize('hats')           -> 'hat'\n        String.singularize('guys', 'person') -> 'person'\n    */\n    singularize(str, singular) {\n        str = str || this.str;\n\n        return this.applyRules(str, this.singularRules, this.uncountableWords, singular);\n    }\n\n    /*\n        String.camelize('message_properties')        -> 'MessageProperties'\n        String.camelize('message_properties', true)  -> 'messageProperties'\n    */\n    camelize(str, lowFirstLetter) {\n        str = str || this.str;\n\n        let str_path = str.split('/');\n        for (var i = 0; i < str_path.length; i++) {\n            let str_arr = str_path[i].split('_');\n            let initX = lowFirstLetter && i + 1 === str_path.length ? 1 : 0;\n\n            for (let x = initX; x < str_arr.length; x++) {\n                str_arr[x] = str_arr[x].charAt(0).toUpperCase() + str_arr[x].substring(1);\n            }\n            str_path[i] = str_arr.join('');\n        }\n        str = str_path.join('::');\n\n        // fix\n        if (lowFirstLetter === true) {\n            let first = str.charAt(0).toLowerCase();\n            let last = str.slice(1);\n            str = first + last;\n        }\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.underscore('MessageProperties')       -> 'message_properties'\n        String.underscore('messageProperties')       -> 'message_properties'\n    */\n    underscore(str) {\n        str = str || this.str;\n\n        var str_path = str.split('::');\n        for (var i = 0; i < str_path.length; i++) {\n            str_path[i] = str_path[i].replace(this.uppercase, '_$1');\n            str_path[i] = str_path[i].replace(this.underbarPrefix, '');\n        }\n        str = str_path.join('/').toLowerCase();\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.humanize('message_properties')        -> 'Message properties'\n        String.humanize('message_properties')        -> 'message properties'\n    */\n    humanize(str, lowFirstLetter) {\n        str = str || this.str;\n\n        var str = str.toLowerCase();\n        str = str.replace(this.idSuffix, '');\n        str = str.replace(this.underbar, ' ');\n        if (!lowFirstLetter) {\n            str = this.capitalize(str);\n        }\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.capitalize('message_properties')      -> 'Message_properties'\n        String.capitalize('message properties')      -> 'Message properties'\n    */\n    capitalize(str) {\n        str = str || this.str;\n\n        str = str.toLowerCase();\n        str = str.substring(0, 1).toUpperCase() + str.substring(1);\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.dasherize('message_properties')       -> 'message-properties'\n        String.dasherize('message properties')       -> 'message-properties'\n    */\n    dasherize(str) {\n        str = str || this.str;\n\n        str = str.replace(this.spaceOrUnderbar, '-');\n        str = str.toLowerCase();\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.normify('message_properties')         -> 'Message Properties'\n        String.normify('message properties')         -> 'Message Properties'\n        Inflactor.normify('Message_propertyId', true)   -> 'Message Properties Id'\n    */\n    normify(str, allFirstUpper) {\n        str = str || this.str;\n\n        //var str = str.toLowerCase();\n        if (allFirstUpper === true) {\n            str = this.camelize(str);\n            str = this.underscore(str);\n        } else {\n            str = str.toLowerCase();\n        }\n\n        str = str.replace(this.underbar, ' ');\n        var str_arr = str.split(' ');\n        for (var x = 0; x < str_arr.length; x++) {\n            var d = str_arr[x].split('-');\n            for (var i = 0; i < d.length; i++) {\n                if (this.nonTitlecasedWords.indexOf(d[i].toLowerCase()) < 0) {\n                    d[i] = this.capitalize(d[i]);\n                }\n            }\n            str_arr[x] = d.join('-');\n        }\n        str = str_arr.join(' ');\n        str = str.substring(0, 1).toUpperCase() + str.substring(1);\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.demodulize('Message::Bus::Properties')    -> 'Properties'\n    */\n    demodulize(str) {\n        str = str || this.str;\n\n        var str_arr = str.split('::');\n        str = str_arr[str_arr.length - 1];\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.tableize('MessageBusProperty')    -> 'message_bus_properties'\n    */\n    tableize(str) {\n        str = str || this.str;\n\n        str = this.pluralize(this.underscore(str));\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.classify('message_bus_properties')    -> 'MessageBusProperty'\n    */\n    classify(str) {\n        str = str || this.str;\n\n        str = this.singularize(this.camelize(str));\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.foreignKey('MessageBusProperty')       -> 'message_bus_property_id'\n        String.foreignKey('MessageBusProperty', true) -> 'message_bus_propertyid'\n    */\n    foreignKey(str, dropIdUbar = false) {\n        str = str || this.str;\n\n        str = this.underscore(this.demodulize(str)) + (dropIdUbar ? '' : '_') + 'id';\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.ordinalize('the 1 pitch')     -> 'the 1st pitch'\n    */\n    ordinalize(str) {\n        str = str || this.str;\n\n        var str_arr = str.split(' ');\n        for (var x = 0; x < str_arr.length; x++) {\n            var i = parseInt(str_arr[x]);\n            if (i === NaN) {\n                var ltd = str_arr[x].substring(str_arr[x].length - 2);\n                var ld = str_arr[x].substring(str_arr[x].length - 1);\n                var suf = 'th';\n                if (ltd != '11' && ltd != '12' && ltd != '13') {\n                    if (ld === '1') {\n                        suf = 'st';\n                    } else if (ld === '2') {\n                        suf = 'nd';\n                    } else if (ld === '3') {\n                        suf = 'rd';\n                    }\n                }\n                str_arr[x] += suf;\n            }\n        }\n        str = str_arr.join(' ');\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /**\n     * @method invoke\n     **/\n    static invoke() {\n        const argz = Object.values(arguments);\n        const instance = new String(null, false);\n        const method = arguments[0];\n        argz.shift();\n\n        if (typeof instance[method] === 'function') {\n            return instance[method](...argz);\n        }\n\n        return null;\n    }\n}\n\nconst pluralize = function() {\n    const argz = ['pluralize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst singularize = function() {\n    const argz = ['singularize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst humanize = function() {\n    const argz = ['humanize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst underscore = function() {\n    const argz = ['underscore', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst camelize = function() {\n    const argz = ['camelize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst capitalize = function() {\n    const argz = ['capitalize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst dasherize = function() {\n    const argz = ['dasherize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst normify = function() {\n    const argz = ['normify', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst demodulize = function() {\n    const argz = ['demodulize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst tableize = function() {\n    const argz = ['tableize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst classify = function() {\n    const argz = ['classify', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst foreignKey = function() {\n    const argz = ['foreignKey', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nexport {\n    pluralize,\n    singularize,\n    humanize,\n    underscore,\n    camelize,\n    capitalize,\n    dasherize,\n    normify,\n    demodulize,\n    tableize,\n    classify,\n    foreignKey\n}","import { Place, Payload, Order } from './resources';\nimport { BrowserAdapter, NodeAdapter, EmberJsAdapter } from './adapters';\nimport { pluralize, singularize } from './utils/string';\n\nconst resources = {\n    Place,\n    Payload,\n    Order\n};\n\nconst adapters = {\n    BrowserAdapter,\n    NodeAdapter,\n    EmberJsAdapter\n};\n\nclass Resolver {\n    constructor () {\n        this.resources = resources;\n        this.adapters = adapters;\n\n        return this.lookup(...arguments);\n    }\n\n    lookup(type, className) {\n        const key = pluralize(type);\n        const params = [ ...arguments ].slice(2);\n\n        if (!this[key]) {\n            throw new Error('Attempted to resolve invalid type');\n        }\n\n        if (!this[key][className]) {\n            throw new Error(`No ${singularize(type)} named ${className} to resolve`);\n        }\n\n        return new this[key][className](...params);\n    }\n}\n\nconst lookup = function() {\n    return new Resolver(...arguments);\n};\n\nexport {\n    Resolver,\n    lookup\n};\n","import { lookup } from './resolver';\nimport { pluralize, classify } from './utils/string';\nimport { isArray } from './utils/array';\nimport { Collection, detectAdapter, isResource, StoreActions } from './utils';\nimport { set, isCallable, invoke } from './utils/object';\n\nconst extendStoreActions = (store, actions = []) => {\n    store.actions = isArray(actions) ? actions : [actions];\n\n    if (isArray(actions)) {\n        for (let i = 0; i < actions.length; i++) {\n            const action = actions[i];\n\n            store.extendActions(action);\n        }\n        return;\n    }\n\n    if (actions instanceof StoreActions) {\n        actions.extend(store);\n    }\n\n    return store;\n};\n\nconst afterFetch = (store, json) => {\n    if (typeof store.options.onAfterFetch === 'function') {\n        store.options.onAfterFetch(json);\n    }\n\n    if (isArray(json)) {\n        const serialized = [];\n\n        for (let i = 0; i < json.length; i++) {\n            serialized.push(store.afterFetch(json[i]));\n        }\n\n        return new Collection(...serialized);\n    }\n\n    const resourceInstance = store.serialize(json);\n    return store.deposit(resourceInstance);\n};\n\nclass Store {\n    constructor(resource, adapter, options = {}) {\n        this.resource = resource;\n        this.adapter = adapter || detectAdapter();\n        this.namespace = pluralize(resource);\n        this.storage = new Collection();\n        this.options = options;\n        this.extendActions(options.actions);\n    }\n\n    extendActions(actions = []) {\n        return extendStoreActions(this, actions);\n    }\n\n    deposit(resourceInstance) {\n        // this.storage[this.namespace].pushObject(resourceInstance);\n\n        return resourceInstance;\n    }\n\n    serialize(json) {\n        return lookup('resource', classify(this.resource), json, this.adapter);\n    }\n\n    afterFetch(json) {\n        return afterFetch(this, json);\n    }\n\n    create(attributes = {}, options = {}) {\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.post(`${this.namespace}`, attributes, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    update(id, attributes = {}, options = {}) {\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.put(`${this.namespace}/${id}`, attributes, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    findRecord(id, options = {}) {\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.get(`${this.namespace}/${id}`, {}, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    findAll(options = {}) {\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.get(`${this.namespace}`, {}, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    query(query = {}, options = {}) {\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.get(`${this.namespace}`, query, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    queryRecord(query = {}, options = {}) {\n        query.single = true;\n\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.get(`${this.namespace}`, query, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    destroy(record, options = {}) {\n        const id = isResource(record) ? record.getAttribute('id') : record;\n\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.delete(`${this.namespace}/${id}`, {}, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n}\n\nexport default Store;\n\nexport { extendStoreActions, afterFetch };\n","import Store from './store';\nimport Resource from './resource';\nimport { Contact, Driver, Entity, Order, Payload, Place, TrackingStatus, Vehicle, Vendor, Waypoint, Zone, ServiceArea, ServiceRate, ServiceQuote } from './resources';\nimport { BrowserAdapter, NodeAdapter, EmberJsAdapter, Adapter } from './adapters';\nimport { isNodeEnvironment, detectAdapter, isLatitude, isLongitude, Point, isResource, GoogleAddress, Collection, StoreActions } from './utils';\nimport { pluralize, singularize, classify, dasherize, camelize } from './utils/string';\nimport { extendStoreActions } from './store';\nimport { orderActions } from './resources/order';\n\n/**\n * // instance\n * const fleetbase = new Fleetbase();\n *\n * const contact = fleetbase.contacts.create({\n * \t\tname: 'Ron',\n * \t\tphone: '+65 9999 8888'\n * });\n *\n * constact.update({ name: 'Hollywood Ron' });\n *\n * // export\n * import { Contact } from '@fleetbase/sdk';\n *\n * const contact = new Contact({\n * \t\tname: 'Ron',\n * \t\tphone: '+65 9999 8888'\n * });\n *\n * contact.save();\n */\n\nexport default class Fleetbase {\n    /**\n     * Builds an instance of the Fleetbase SDK\n     *\n     * @param  {String}  publicKey  The public key issued\n     * @param  {Object}  config     The version of resource to access\n     * @param  {Boolean} debug      Debug mode for SDK\n     * @return {Fleetbase}          Instance\n     */\n    constructor(publicKey, config = {}, debug = false) {\n        this.version = config.version || 'v1';\n        this.options = {\n            version: this.version,\n            host: config.host || 'https://api.fleetbase.io',\n            namespace: this.version || config.namespace,\n            debug,\n            publicKey,\n        };\n\n        if (typeof publicKey !== 'string' || publicKey.length === 0) {\n            throw new Error('⚠️ Invalid public key given to Fleetbase SDK');\n        }\n\n        if (!isNodeEnvironment() && publicKey.toLowerCase().startsWith('$')) {\n            throw new Error('Secret key provided. You must use a public key with Fleetbase Javascript SDK!');\n        }\n\n        this.adapter = config.adapter || detectAdapter(this.options);\n\n        this.orders = new Store('order', this.adapter).extendActions(orderActions);\n        this.entities = new Store('entity', this.adapter);\n        this.places = new Store('place', this.adapter);\n        this.drivers = new Store('driver', this.adapter);\n        this.vehicles = new Store('vehicle', this.adapter);\n        this.vendors = new Store('vendor', this.adapter);\n        this.contacts = new Store('contact', this.adapter);\n    }\n\n    static newInstance() {\n        return new Fleetbase(...arguments);\n    }\n\n    setAdapter(adapter) {\n        this.adapter = adapter;\n    }\n\n    getAdapter() {\n        return this.adapter;\n    }\n}\n\nexport {\n    Store,\n    Resource,\n    Contact,\n    Driver,\n    Entity,\n    Order,\n    Payload,\n    Place,\n    TrackingStatus,\n    Vehicle,\n    Vendor,\n    Waypoint,\n    Zone,\n    ServiceArea,\n    ServiceRate,\n    ServiceQuote,\n    BrowserAdapter,\n    NodeAdapter,\n    EmberJsAdapter,\n    Adapter,\n    isNodeEnvironment,\n    isLatitude,\n    isLongitude,\n    Point,\n    isResource,\n    GoogleAddress,\n    Collection,\n    StoreActions,\n    extendStoreActions,\n    pluralize,\n    singularize,\n    classify,\n    dasherize,\n    camelize,\n};\n"],"names":["isArray","Array","CHUNK_SIZE","replace","array","start","deleteCount","items","length","splice","i","chunk","slice","isCollection","arr","identityFunction","item","uniqBy","key","ret","seen","Set","getter","get","forEach","val","has","add","push","mixed","Collection","objectAt","index","iter","value","arguments","Boolean","findIndex","predicate","startAt","len","find","callback","target","bind","undefined","any","every","cb","indexOf","withNaNCheck","removeAt","insertAt","this","indexes","map","idx","_this2","object","methodName","args","_item$methodName","filter","sortKeys","sort","a","b","propA","propB","compareValue","compare","includes","obj","objects","toArray","reverse","clear","loc","removeObject","pushObject","_this3","addObject","isEmpty","none","size","objectType","isBlank","test","isLatitude","coordinate","isFinite","Math","abs","isLongitude","isResource","record","Resource","isNodeEnvironment","process","_typeof","_process","env","release","name","search","window","navigator","product","detectAdapter","options","lookup","GoogleAddress","place","geometry","components","parseComponents","attributes","parseProperties","address_components","reduce","acc","data","types","type","streetNumber","streetName","coordinates","location","Object","values","city","or","county","stateShort","stateLong","countryShort","country","countryLong","postalCode","address","join","keys","pkey","short","short_name","long_name","Point","latitude","longitude","coorindates","lat","lng","serialize","json","getResolved","func","path","resolved","current","isObject","isFunction","pathArray","split","newPath","set","iterations","StoreActions","actions","bindTo","binding","action","fn","adapter","resource","dirtyAttributes","changes","isLoading","isSaving","isDestroying","isReloading","version","setAdapter","store","Store","onAfterFetch","syncAttributes","_this$options","getAttribute","mergeAttributes","setFlags","create","then","response","_this","update","id","destroy","findRecord","_this4","reset","flags","state","validFlags","flag","Error","attribues","getAttributes","onlyDirty","savedirty","dirtyAttributeKeys","hasAttribute","Date","hasAttributes","isNew","isLoaded","property","_this5","call","setAttributes","previousValue","changedAt","setAttribute","attribute","defaultValue","properties","attributeKeys","prop","_this6","modelAttributes","orderActions","getDistanceAndTime","namespace","Order","Payload","entity","waypoints","Entity","Place","_this$getAttribute","_this$getAttribute2","owner","googleAddress","street1","street2","province","postal_code","neighborhood","district","building","phone","security_access_code","Waypoint","TrackingStatus","Vehicle","Driver","Vendor","Contact","Zone","ServiceArea","ServiceRate","ServiceQuote","Adapter","config","host","headers","BrowserAdapter","setHeaders","Authorization","publicKey","Promise","resolve","reject","statusText","status","ok","method","fetch","url","mode","Headers","parseJSON","errors","error","query","urlParams","URLSearchParams","toString","request","body","JSON","stringify","NodeAdapter","axios","baseURL","commonHeaders","defaults","common","transform","handleError","post","put","patch","EmberJsAdapter","String","string","chain","RegExp","str","rules","skip","override","toLowerCase","x","match","plural","applyRules","pluralRules","uncountableWords","singular","singularRules","lowFirstLetter","str_path","str_arr","charAt","toUpperCase","substring","first","last","uppercase","underbarPrefix","idSuffix","underbar","capitalize","spaceOrUnderbar","allFirstUpper","camelize","underscore","d","nonTitlecasedWords","pluralize","singularize","dropIdUbar","demodulize","NaN","parseInt","ltd","ld","suf","argz","instance","shift","invoke","dasherize","classify","resources","adapters","Resolver","className","params","extendStoreActions","extend","extendActions","afterFetch","serialized","resourceInstance","deposit","storage","single","_this7","Fleetbase","debug","startsWith","orders","entities","places","drivers","vehicles","vendors","contacts"],"mappings":"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"}